---
- job-template:
    name: '{env}-heat-healthcheck'
    project-type: freestyle
    lab-name: ''
    tenant-name: ''
    scm:
      - git-integration:
          branch: "{branch}"
    wrappers:
      - timestamps
    builders:
      - shell: |
          #!/bin/bash
          set +x
          . $WORKSPACE/deployment/heat/onap-oom/env/{lab-name}/{tenant-name}-openrc
          . $JENKINS_HOME/onap-lab-ci/labs/{lab-name}-openrc
          source $WORKSPACE/test/ete/scripts/install_openstack_cli.sh

          set -x
          rm -rf $WORKSPACE/archives
          mkdir -p $WORKSPACE/archives

          $WORKSPACE/test/ete/scripts/run-healthcheck.sh
          exit 0
    publishers:
      - integration-robot
      - archive-logs

- job-template:
    name: '{env}-heat-instantiate'
    project-type: freestyle
    lab-name: ''
    tenant-name: ''
    scm:
      - git-integration:
          branch: "{branch}"
    wrappers:
      - timestamps
    triggers:
      - reverse:
          jobs:
            - "{env}-heat-deploy"
          result: 'unstable'
    properties:
      - build-blocker:
          blocking-jobs:
            - "{env}-heat-deploy"
            - "{env}-heat-healthcheck"
    builders:
      - shell: |
          #!/bin/bash
          set +x
          . $WORKSPACE/deployment/heat/onap-oom/env/{lab-name}/{tenant-name}-openrc
          . $JENKINS_HOME/onap-lab-ci/labs/{lab-name}-openrc
          source $WORKSPACE/test/ete/scripts/install_openstack_cli.sh

          set -x
          rm -rf $WORKSPACE/archives
          mkdir -p $WORKSPACE/archives

          cd $WORKSPACE/test/ete/scripts
          ROBOT_IP=$(./get-floating-ip.sh onap-robot)
          echo "ROBOT_IP=$ROBOT_IP"

          if [ "" == "$ROBOT_IP" ]; then
            exit 1
          fi
          SSH_KEY=~/.ssh/onap_key
          ssh-keygen -R $ROBOT_IP

          ssh -o StrictHostKeychecking=no -i $SSH_KEY root@$ROBOT_IP "/opt/demo.sh init"

          ssh -i $SSH_KEY root@$ROBOT_IP "/opt/ete.sh healthdist"

          ssh -i $SSH_KEY root@$ROBOT_IP "/opt/ete.sh distribute"

          ssh -i $SSH_KEY root@$ROBOT_IP "/opt/ete.sh instantiate"

          LOG_DIR=$(ssh -i $SSH_KEY root@$ROBOT_IP "ls -1t /opt/eteshare/logs | grep instantiate | head -1")
          echo "Browse Robot results at http://$ROBOT_IP:88/logs/$LOG_DIR/"
          rsync -e "ssh -i $SSH_KEY" -avz root@$ROBOT_IP:/opt/eteshare/logs/$LOG_DIR/ $WORKSPACE/archives/
          exit 0
    publishers:
      - integration-robot
      - archive-logs

- job-template:
    name: '{env}-heat-stability72hr'
    project-type: freestyle
    lab-name: ''
    tenant-name: ''
    scm:
      - git-integration:
          branch: "{branch}"
    wrappers:
      - timestamps
    triggers:
      - timed: '0 * * * *'
    properties:
      - build-blocker:
          blocking-jobs:
            - "{env}-heat-deploy"
            - "{env}-heat-healthcheck"
            - "{env}-heat-instantiate"
    builders:
      - shell: |
          #!/bin/bash
          set +x
          . $WORKSPACE/deployment/heat/onap-oom/env/{lab-name}/{tenant-name}-openrc
          . $JENKINS_HOME/onap-lab-ci/labs/{lab-name}-openrc
          source $WORKSPACE/test/ete/scripts/install_openstack_cli.sh

          set -x
          rm -rf $WORKSPACE/archives
          mkdir -p $WORKSPACE/archives

          cd $WORKSPACE/test/ete/scripts
          ROBOT_IP=$(./get-floating-ip.sh onap-robot)
          echo "ROBOT_IP=$ROBOT_IP"

          if [ "" == "$ROBOT_IP" ]; then
            exit 1
          fi
          SSH_KEY=~/.ssh/onap_key
          ssh-keygen -R $ROBOT_IP

          ssh -o StrictHostKeychecking=no -i $SSH_KEY root@$ROBOT_IP "/opt/ete.sh stability72hr"

          LOG_DIR=$(ssh -i $SSH_KEY root@$ROBOT_IP "ls -1t /opt/eteshare/logs | grep stability72hr | head -1")
          echo "Browse Robot results at http://$ROBOT_IP:88/logs/$LOG_DIR/"
          rsync -e "ssh -i $SSH_KEY" -avz root@$ROBOT_IP:/opt/eteshare/logs/$LOG_DIR/ $WORKSPACE/archives/
          exit 0
    publishers:
      - integration-robot
      - archive-logs

- job-template:
    name: '{env}-heat-deploy'
    project-type: freestyle
    lab-name: ''
    tenant-name: ''
    scm:
      - git-integration:
          branch: "{branch}"
    wrappers:
      - timestamps
    builders:
      - shell: |
          #!/bin/bash
          set +x
          . $WORKSPACE/deployment/heat/onap-oom/env/{lab-name}/{tenant-name}-openrc
          . $JENKINS_HOME/onap-lab-ci/labs/{lab-name}-openrc
          source $WORKSPACE/test/ete/scripts/install_openstack_cli.sh

          set -x
          rm -rf $WORKSPACE/archives
          mkdir -p $WORKSPACE/archives

          $WORKSPACE/test/ete/scripts/deploy-onap.sh {lab-name}
          if [ $? -ne 0 ]; then
            exit 1
          fi

          # retry every 15 minutes for up to 2 hours
          n=0
          until [ $n -ge 8 ]
          do
            sleep 15m
            $WORKSPACE/test/ete/scripts/run-healthcheck.sh && break
            n=$[$n+1]
          done
    publishers:
      - integration-robot
      - archive-logs



- builder:
    name: run-heat-ete
    builders:
      - shell: |
          #!/bin/bash
          set +x
          . $WORKSPACE/deployment/heat/onap-oom/env/{lab-name}/{tenant-name}-openrc
          . $JENKINS_HOME/onap-lab-ci/labs/{lab-name}-openrc
          source $WORKSPACE/test/ete/scripts/install_openstack_cli.sh

          set -x
          rm -rf $WORKSPACE/archives
          mkdir -p $WORKSPACE/archives

          SSH_KEY=~/.ssh/onap_key

          # apply manifest versions
          DEMO_DIR=$ONAP_WORKDIR/demo
          pushd $DEMO_DIR
          git reset --hard origin
          git pull
          $WORKSPACE/version-manifest/src/main/scripts/update-heat-image-versions.sh $WORKSPACE/version-manifest/src/main/resources/{docker_manifest} $DEMO_DIR
          git diff
          popd

          $WORKSPACE/test/ete/scripts/deploy-onap.sh {lab-name} $DEMO_DIR
          if [ $? -ne 0 ]; then
            exit 1
          fi

          cd $WORKSPACE/test/ete/scripts
          ROBOT_IP=$(./get-floating-ip.sh onap-robot)
          echo "ROBOT_IP=$ROBOT_IP"
          if [ "" == "$ROBOT_IP" ]; then
            exit 1
          fi

          sleep 15m

          RESULT=0
          for n in $(seq 1 10); do
            echo "Wait count $n of 10"
            sleep $RESULT'm'
            $WORKSPACE/test/ete/scripts/run-healthcheck.sh
            RESULT=$?
            if [ $RESULT -eq 0 ]; then
              break
            elif [ $RESULT -gt 15 ]; then
              RESULT=15
            fi
          done
          LOG_DIR=$(ssh -i $SSH_KEY root@$ROBOT_IP "ls -1t /opt/eteshare/logs | grep health | head -1")
          echo "Browse Robot results at http://$ROBOT_IP:88/logs/$LOG_DIR/"
          mkdir -p $WORKSPACE/archives/healthcheck
          rsync -e "ssh -i $SSH_KEY" -avz root@$ROBOT_IP:/opt/eteshare/logs/$LOG_DIR/ $WORKSPACE/archives/healthcheck

          $WORKSPACE/test/ete/scripts/get-docker-versions.sh

          sleep 15m

          ssh -i $SSH_KEY root@$ROBOT_IP "/opt/demo.sh init"
          LOG_DIR="demo/InitDemo"
          echo "Browse Robot results at http://$ROBOT_IP:88/logs/$LOG_DIR/"
          mkdir -p $WORKSPACE/archives/demo-init
          rsync -e "ssh -i $SSH_KEY" -avz root@$ROBOT_IP:/opt/eteshare/logs/$LOG_DIR/ $WORKSPACE/archives/demo-init

          ssh -i $SSH_KEY root@$ROBOT_IP "/opt/ete.sh healthdist"
          LOG_DIR=$(ssh -i $SSH_KEY root@$ROBOT_IP "ls -1t /opt/eteshare/logs | grep healthdist | head -1")
          echo "Browse Robot results at http://$ROBOT_IP:88/logs/$LOG_DIR/"
          mkdir -p $WORKSPACE/archives/healthdist
          rsync -e "ssh -i $SSH_KEY" -avz root@$ROBOT_IP:/opt/eteshare/logs/$LOG_DIR/ $WORKSPACE/archives/healthdist

          ssh -i $SSH_KEY root@$ROBOT_IP "/opt/ete.sh distribute"
          LOG_DIR=$(ssh -i $SSH_KEY root@$ROBOT_IP "ls -1t /opt/eteshare/logs | grep distribute | head -1")
          echo "Browse Robot results at http://$ROBOT_IP:88/logs/$LOG_DIR/"
          mkdir -p $WORKSPACE/archives/distribute
          rsync -e "ssh -i $SSH_KEY" -avz root@$ROBOT_IP:/opt/eteshare/logs/$LOG_DIR/ $WORKSPACE/archives/distribute

          ssh -i $SSH_KEY root@$ROBOT_IP "/opt/ete.sh instantiate"
          LOG_DIR=$(ssh -i $SSH_KEY root@$ROBOT_IP "ls -1t /opt/eteshare/logs | grep instantiate | head -1")
          echo "Browse Robot results at http://$ROBOT_IP:88/logs/$LOG_DIR/"
          mkdir -p $WORKSPACE/archives/instantiate
          rsync -e "ssh -i $SSH_KEY" -avz root@$ROBOT_IP:/opt/eteshare/logs/$LOG_DIR/ $WORKSPACE/archives/instantiate

          cd $WORKSPACE/archives
          rebot -N "ONAP CI" --removekeywords wuks --output output.xml --merge healthcheck/output.xml demo-init/output.xml  healthdist/output.xml distribute/output.xml instantiate/output.xml

          exit 0


- job-template:
    name: '{env}-heat-verify'
    project-type: freestyle
    lab-name: ''
    tenant-name: ''
    scm:
      - gerrit-trigger-scm
    triggers:
      - gerrit-trigger-patch-submitted:
          project: 'integration'
          branch: '{branch}'
          files: 'version-manifest/src/main/resources/docker-manifest.csv'
    wrappers:
      - timestamps
      - timeout:
          timeout: 300
          fail: true
    builders:
      - run-heat-ete:
          lab-name: '{lab-name}'
          tenant-name: '{tenant-name}'
          docker_manifest: 'docker-manifest.csv'
          gerrit_branch: '$GERRIT_BRANCH'
          gerrit_refspec: '$GERRIT_REFSPEC'
    publishers:
      - integration-robot
      - archive-logs

- job-template:
    name: '{env}-heat-daily'
    project-type: freestyle
    lab-name: ''
    tenant-name: ''
    scm:
      - git-integration:
          branch: "{branch}"
    wrappers:
      - timestamps
      - timeout:
          timeout: 300
          fail: true
    triggers:
      - timed: 'H 6 * * *'
    builders:
      - run-heat-ete:
          lab-name: '{lab-name}'
          tenant-name: '{tenant-name}'
          docker_manifest: 'docker-manifest.csv'
          gerrit_branch: '{branch}'
          gerrit_refspec: 'refs/heads/master'
    publishers:
      - integration-robot
      - archive-logs
      - trigger-lf-lab-job:
          lab-name: '{lab-name}'

- job-template:
    triggers_var:
    name: '{env}-heat-staging-{frequency}'
    project-type: freestyle
    lab-name: ''
    tenant-name: ''
    scm:
      - git-integration:
          branch: "{branch}"
    wrappers:
      - timestamps
      - timeout:
          timeout: 300
          fail: true
    triggers: '{obj:triggers_var}'
    builders:
      - run-heat-ete:
          lab-name: '{lab-name}'
          tenant-name: '{tenant-name}'
          docker_manifest: 'docker-manifest-staging.csv'
          gerrit_branch: '{branch}'
          gerrit_refspec: 'refs/heads/master'
    publishers:
      - integration-robot
      - archive-logs
      - trigger-lf-lab-job:
          lab-name: '{lab-name}'
