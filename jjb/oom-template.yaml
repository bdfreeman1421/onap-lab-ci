---
- job-template:
    name: '{env}-oom-healthcheck'
    project-type: freestyle
    lab-name: ''
    tenant-name: ''
    scm:
      - git-integration:
          branch: "{branch}"
    wrappers:
      - timestamps
    builders:
      - run-oom-ete-tag:
          lab-name: '{lab-name}'
          tenant-name: '{tenant-name}'
          robot-tag: 'health'
    publishers:
      - integration-robot
      - archive-logs

- job-template:
    name: '{env}-oom-resilience-healthdist'
    disabled: '{obj:disabled_var}'
    project-type: freestyle
    lab-name: ''
    tenant-name: ''
    scm:
      - git-integration:
          branch: "{branch}"
    wrappers:
      - timestamps
    parameters:
      - string:
          name: POD_TO_DELETE
          description: 'Name of pod to delete.  This string will be grepped against the pod list and used to delete the pod.'
    properties:
      - build-blocker:
          blocking-jobs:
            - "{env}-oom-deploy"
            - "{env}-oom-healthcheck"
    builders:
      - shell: |
          #!/bin/bash
          set +x
          . $WORKSPACE/deployment/heat/onap-oom/env/{lab-name}/{tenant-name}-openrc
          . $JENKINS_HOME/onap-lab-ci/labs/{lab-name}-openrc
          source $WORKSPACE/test/ete/scripts/install_openstack_cli.sh

          set -x
          rm -rf $WORKSPACE/archives
          mkdir -p $WORKSPACE/archives

          SSH_KEY=~/.ssh/onap_key
          STACK_NAME="{stack-name}"
          RANCHER_IP=$(openstack stack output show $STACK_NAME rancher_vm_ip -c output_value -f value)
          K8S_IP=$(openstack stack output show $STACK_NAME k8s_01_vm_ip -c output_value -f value)
          ssh-keygen -R $RANCHER_IP

          ROBOT_POD=$(echo "kubectl -n onap get pods | grep robot | sed 's/ .*//'" | ssh -i $SSH_KEY -o StrictHostKeychecking=no ubuntu@$RANCHER_IP sudo su)
          if [ "$ROBOT_POD" == "" ]; then
            exit 1
          fi

          POD_TO_KILL=$(echo "kubectl -n onap get pods | grep $POD_TO_DELETE | sed 's/ .*//' | head -1" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su)
          echo "kubectl -n onap delete pod $POD_TO_KILL" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su
          for n in $(seq 1 180); do
            sleep 30
            RESULT=$(ssh -i $SSH_KEY ubuntu@$RANCHER_IP 'sudo su -c "kubectl -n onap get pods"' | grep -vE 'NAME|Completed|Error|1/1|2/2' | wc -l)
            if [[ $? -eq 0 && $RESULT -eq 0 ]]; then
              break
            fi
          done

          ssh -i $SSH_KEY ubuntu@$RANCHER_IP  'sudo su -l root -c "/root/oom/kubernetes/robot/ete-k8s.sh onap healthdist"'
          retval=$?

          LOG_DIR=$(echo "kubectl exec -n onap $ROBOT_POD -- ls -1t /share/logs | grep healthdist | head -1" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su)
          if [ "$LOG_DIR" == "" ]; then
            exit 1
          fi

          echo "kubectl cp -n onap $ROBOT_POD:share/logs/$LOG_DIR /tmp/robot/logs/$LOG_DIR" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su
          rsync -e "ssh -i $SSH_KEY" -avtz ubuntu@$RANCHER_IP:/tmp/robot/logs/$LOG_DIR/ $WORKSPACE/archives/

          echo "Browse Robot results at http://$K8S_IP:30209/logs/$LOG_DIR/"

          exit 0
    publishers:
      - integration-robot
      - archive-logs

- job-template:
    name: '{env}-oom-resilience-instantiateDemoVFWCL'
    disabled: '{obj:disabled_var}'
    project-type: freestyle
    lab-name: ''
    tenant-name: ''
    scm:
      - git-integration:
          branch: "{branch}"
    wrappers:
      - timestamps
    parameters:
      - string:
          name: POD_TO_DELETE
          description: 'Name of pod to delete.  This string will be grepped against the pod list and used to delete the pod.'
    properties:
      - build-blocker:
          blocking-jobs:
            - "{env}-oom-deploy"
            - "{env}-oom-healthcheck"
    builders:
      - shell: |
          #!/bin/bash
          set +x
          . $WORKSPACE/deployment/heat/onap-oom/env/{lab-name}/{tenant-name}-openrc
          . $JENKINS_HOME/onap-lab-ci/labs/{lab-name}-openrc
          source $WORKSPACE/test/ete/scripts/install_openstack_cli.sh

          set -x
          rm -rf $WORKSPACE/archives
          mkdir -p $WORKSPACE/archives

          SSH_KEY=~/.ssh/onap_key
          STACK_NAME="{stack-name}"
          RANCHER_IP=$(openstack stack output show $STACK_NAME rancher_vm_ip -c output_value -f value)
          K8S_IP=$(openstack stack output show $STACK_NAME k8s_01_vm_ip -c output_value -f value)
          ssh-keygen -R $RANCHER_IP

          ROBOT_POD=$(echo "kubectl -n onap get pods | grep robot | sed 's/ .*//'" | ssh -i $SSH_KEY -o StrictHostKeychecking=no ubuntu@$RANCHER_IP sudo su)
          if [ "$ROBOT_POD" == "" ]; then
            exit 1
          fi

          POD_TO_KILL=$(echo "kubectl -n onap get pods | grep $POD_TO_DELETE | sed 's/ .*//' | head -1" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su)
          echo "kubectl -n onap delete pod $POD_TO_KILL" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su
          for n in $(seq 1 180); do
            sleep 30
            RESULT=$(ssh -i $SSH_KEY ubuntu@$RANCHER_IP 'sudo su -c "kubectl -n onap get pods"' | grep -vE 'NAME|Completed|Error|1/1|2/2' | wc -l)
            if [[ $? -eq 0 && $RESULT -eq 0 ]]; then
              break
            fi
          done

          ssh -i $SSH_KEY ubuntu@$RANCHER_IP  'sudo su -l root -c "/root/oom/kubernetes/robot/ete-k8s.sh onap instantiateDemoVFWCL"'
          retval=$?

          LOG_DIR=$(echo "kubectl exec -n onap $ROBOT_POD -- ls -1t /share/logs | grep instantiateDemoVFWCL | head -1" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su)
          if [ "$LOG_DIR" == "" ]; then
            exit 1
          fi

          echo "kubectl cp -n onap $ROBOT_POD:share/logs/$LOG_DIR /tmp/robot/logs/$LOG_DIR" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su
          rsync -e "ssh -i $SSH_KEY" -avtz ubuntu@$RANCHER_IP:/tmp/robot/logs/$LOG_DIR/ $WORKSPACE/archives/

          echo "Browse Robot results at http://$K8S_IP:30209/logs/$LOG_DIR/"

          # clean up demo stacks
          DEMO_STACKS=$(openstack stack list -f value -c "Stack Name" --sort creation_time:desc | grep Vfmodule_Demo_ )
          if [ ! -z "$DEMO_STACKS" ]; then
            openstack stack delete -y $DEMO_STACKS
          fi

          exit 0
    publishers:
      - integration-robot
      - archive-logs

- job-template:
    name: '{env}-oom-resilience-vfwclosedloop'
    disabled: '{obj:disabled_var}'
    project-type: freestyle
    lab-name: ''
    tenant-name: ''
    scm:
      - git-integration:
          branch: "{branch}"
    wrappers:
      - timestamps
    parameters:
      - string:
          name: POD_TO_DELETE
          description: 'Name of pod to delete.  This string will be grepped against the pod list and used to delete the pod.'
    properties:
      - build-blocker:
          blocking-jobs:
            - "{env}-oom-deploy"
            - "{env}-oom-healthcheck"
    builders:
      - shell: |
          #!/bin/bash
          set +x
          . $WORKSPACE/deployment/heat/onap-oom/env/{lab-name}/{tenant-name}-openrc
          . $JENKINS_HOME/onap-lab-ci/labs/{lab-name}-openrc
          source $WORKSPACE/test/ete/scripts/install_openstack_cli.sh

          set -x
          rm -rf $WORKSPACE/archives
          mkdir -p $WORKSPACE/archives

          SSH_KEY=~/.ssh/onap_key
          STACK_NAME="{stack-name}"
          RANCHER_IP=$(openstack stack output show $STACK_NAME rancher_vm_ip -c output_value -f value)
          K8S_IP=$(openstack stack output show $STACK_NAME k8s_01_vm_ip -c output_value -f value)
          ssh-keygen -R $RANCHER_IP

          ROBOT_POD=$(echo "kubectl -n onap get pods | grep robot | sed 's/ .*//'" | ssh -i $SSH_KEY -o StrictHostKeychecking=no ubuntu@$RANCHER_IP sudo su)
          if [ "$ROBOT_POD" == "" ]; then
            exit 1
          fi

          POD_TO_KILL=$(echo "kubectl -n onap get pods | grep $POD_TO_DELETE | sed 's/ .*//' | head -1" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su)
          echo "kubectl -n onap delete pod $POD_TO_KILL" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su
          for n in $(seq 1 180); do
            sleep 30
            RESULT=$(ssh -i $SSH_KEY ubuntu@$RANCHER_IP 'sudo su -c "kubectl -n onap get pods"' | grep -vE 'NAME|Completed|Error|1/1|2/2' | wc -l)
            if [[ $? -eq 0 && $RESULT -eq 0 ]]; then
              break
            fi
          done

          PKG_STACK=$(openstack stack list -f value -c "Stack Name" --sort creation_time:desc | grep Vfmodule_Demo_vPKG | head -1)
          PUBLIC_NET_ID=$(openstack stack show $STACK_NAME -f json | jq -r '.parameters.public_net_id')
          PUBLIC_NET_NAME=$(openstack network show $PUBLIC_NET_ID -f value -c name)
          PKG_IP=$(openstack stack resource show $PKG_STACK vpg_0 -f json | jq -r ".attributes.addresses.$PUBLIC_NET_NAME[0].addr")

          for n in $(seq 1 10); do
            echo "Wait for vfwclosedloop count $n of 10"
            echo "/root/oom/kubernetes/robot/demo-k8s.sh onap vfwclosedloop $PKG_IP" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su
            RESULT=$?
            if [[ $RESULT -eq 0 ]]; then
              break
            fi
          done

          LOG_DIR=$(echo "kubectl exec -n onap $ROBOT_POD -- ls -1t /share/logs | grep vfwclosedloop | head -1" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su)
          if [ "$LOG_DIR" == "" ]; then
            exit 1
          fi

          echo "kubectl cp -n onap $ROBOT_POD:share/logs/$LOG_DIR /tmp/robot/logs/$LOG_DIR" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su
          rsync -e "ssh -i $SSH_KEY" -avtz ubuntu@$RANCHER_IP:/tmp/robot/logs/$LOG_DIR/ $WORKSPACE/archives/

          echo "Browse Robot results at http://$K8S_IP:30209/logs/$LOG_DIR/"

          exit 0
    publishers:
      - integration-robot
      - archive-logs

- job-template:
    name: '{env}-oom-instantiate'
    project-type: freestyle
    lab-name: ''
    tenant-name: ''
    scm:
      - git-integration:
          branch: "{branch}"
    wrappers:
      - timestamps
    triggers:
      - reverse:
          jobs:
            - "{env}-oom-deploy"
          result: 'unstable'
    properties:
      - build-blocker:
          blocking-jobs:
            - "{env}-oom-deploy"
            - "{env}-oom-healthcheck"
    builders:
      - shell: |
          #!/bin/bash
          set +x
          . $WORKSPACE/deployment/heat/onap-oom/env/{lab-name}/{tenant-name}-openrc
          . $JENKINS_HOME/onap-lab-ci/labs/{lab-name}-openrc
          source $WORKSPACE/test/ete/scripts/install_openstack_cli.sh

          set -x
          rm -rf $WORKSPACE/archives
          mkdir -p $WORKSPACE/archives

          SSH_KEY=~/.ssh/onap_key
          STACK_NAME="{stack-name}"
          RANCHER_IP=$(openstack stack output show $STACK_NAME rancher_vm_ip -c output_value -f value)
          K8S_IP=$(openstack stack output show $STACK_NAME k8s_01_vm_ip -c output_value -f value)
          ssh-keygen -R $RANCHER_IP

          ROBOT_POD=$(echo "kubectl -n onap get pods | grep robot | sed 's/ .*//'" | ssh -i $SSH_KEY -o StrictHostKeychecking=no ubuntu@$RANCHER_IP sudo su)
          if [ "$ROBOT_POD" == "" ]; then
            exit 1
          fi

          ssh -i $SSH_KEY ubuntu@$RANCHER_IP  'sudo su -l root -c "/root/oom/kubernetes/robot/demo-k8s.sh onap init"'

          ssh -i $SSH_KEY ubuntu@$RANCHER_IP  'sudo su -l root -c "/root/oom/kubernetes/robot/ete-k8s.sh onap healthdist"'

          ssh -i $SSH_KEY ubuntu@$RANCHER_IP  'sudo su -l root -c "/root/oom/kubernetes/robot/ete-k8s.sh onap distribute"'

          ssh -i $SSH_KEY ubuntu@$RANCHER_IP  'sudo su -l root -c "/root/oom/kubernetes/robot/ete-k8s.sh onap instantiate"'
          retval=$?

          LOG_DIR=$(echo "kubectl exec -n onap $ROBOT_POD -- ls -1t /share/logs | grep instantiate | head -1" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su)
          if [ "$LOG_DIR" == "" ]; then
            exit 1
          fi

          echo "kubectl cp -n onap $ROBOT_POD:share/logs/$LOG_DIR /tmp/robot/logs/$LOG_DIR" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su
          rsync -e "ssh -i $SSH_KEY" -avtz ubuntu@$RANCHER_IP:/tmp/robot/logs/$LOG_DIR/ $WORKSPACE/archives/

          echo "Browse Robot results at http://$K8S_IP:30209/logs/$LOG_DIR/"

          exit 0
    publishers:
      - integration-robot
      - archive-logs

- job-template:
    disabled_var:
    name: '{env}-oom-stability72hr'
    disabled: '{obj:disabled_var}'
    project-type: freestyle
    lab-name: ''
    tenant-name: ''
    scm:
      - git-integration:
          branch: "{branch}"
    wrappers:
      - timestamps
    triggers:
      - timed: '0 * * * *'
    properties:
      - build-blocker:
          blocking-jobs:
            - "{env}-oom-deploy"
            - "{env}-oom-healthcheck"
            - "{env}-oom-instantiate"
            - "{env}-oom-manual"
            - "{env}-oom-staging-manual"
    builders:
      - shell: |
          #!/bin/bash
          set +x
          . $WORKSPACE/deployment/heat/onap-oom/env/{lab-name}/{tenant-name}-openrc
          . $JENKINS_HOME/onap-lab-ci/labs/{lab-name}-openrc
          source $WORKSPACE/test/ete/scripts/install_openstack_cli.sh

          set -x
          rm -rf $WORKSPACE/archives
          mkdir -p $WORKSPACE/archives

          SSH_KEY=~/.ssh/onap_key
          STACK_NAME="{stack-name}"
          RANCHER_IP=$(openstack stack output show $STACK_NAME rancher_vm_ip -c output_value -f value)
          K8S_IP=$(openstack stack output show $STACK_NAME k8s_01_vm_ip -c output_value -f value)
          ssh-keygen -R $RANCHER_IP

          echo "kubectl top nodes" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su
          echo "kubectl get pods -n onap | grep -vE 'Completed|Error|1/1|2/2'" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su

          ROBOT_POD=$(echo "kubectl -n onap get pods | grep robot | sed 's/ .*//'" | ssh -i $SSH_KEY -o StrictHostKeychecking=no ubuntu@$RANCHER_IP sudo su)
          if [ "$ROBOT_POD" == "" ]; then
            exit 1
          fi

          ssh -i $SSH_KEY ubuntu@$RANCHER_IP  'sudo su -l root -c "/root/oom/kubernetes/robot/ete-k8s.sh onap stability72hr"'
          retval=$?

          LOG_DIR=$(echo "kubectl exec -n onap $ROBOT_POD -- ls -1t /share/logs | grep stability72hr | head -1" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su)
          if [ "$LOG_DIR" == "" ]; then
            exit 1
          fi

          echo "kubectl cp -n onap $ROBOT_POD:share/logs/$LOG_DIR /tmp/robot/logs/$LOG_DIR" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su
          rsync -e "ssh -i $SSH_KEY" -avtz ubuntu@$RANCHER_IP:/tmp/robot/logs/$LOG_DIR/ $WORKSPACE/archives/

          echo "kubectl top nodes" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su
          echo "kubectl get pods -n onap | grep -vE 'Completed|Error|1/1|2/2'" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su

          echo "Browse Robot results at http://$K8S_IP:30209/logs/$LOG_DIR/"

          exit 0
    publishers:
      - integration-robot
      - archive-logs

- job-template:
    disabled_var:
    name: '{env}-oom-vfwclosedloop'
    disabled: '{obj:disabled_var}'
    project-type: freestyle
    lab-name: ''
    tenant-name: ''
    scm:
      - git-integration:
          branch: "{branch}"
    wrappers:
      - timestamps
    triggers:
      - timed: '0 * * * *'
    properties:
      - build-blocker:
          blocking-jobs:
            - "{env}-oom-deploy"
            - "{env}-oom-healthcheck"
            - "{env}-oom-instantiate"
            - "{env}-oom-manual"
            - "{env}-oom-staging-manual"
    builders:
      - shell: |
          #!/bin/bash
          set +x
          . $WORKSPACE/deployment/heat/onap-oom/env/{lab-name}/{tenant-name}-openrc
          . $JENKINS_HOME/onap-lab-ci/labs/{lab-name}-openrc
          source $WORKSPACE/test/ete/scripts/install_openstack_cli.sh

          set -x
          rm -rf $WORKSPACE/archives
          mkdir -p $WORKSPACE/archives

          SSH_KEY=~/.ssh/onap_key
          STACK_NAME="{stack-name}"
          RANCHER_IP=$(openstack stack output show $STACK_NAME rancher_vm_ip -c output_value -f value)
          K8S_IP=$(openstack stack output show $STACK_NAME k8s_01_vm_ip -c output_value -f value)
          ssh-keygen -R $RANCHER_IP

          echo "kubectl top nodes" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su
          echo "kubectl get pods -n onap | grep -vE 'Completed|Error|1/1|2/2'" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su

          ROBOT_POD=$(echo "kubectl -n onap get pods | grep robot | sed 's/ .*//'" | ssh -i $SSH_KEY -o StrictHostKeychecking=no ubuntu@$RANCHER_IP sudo su)
          if [ "$ROBOT_POD" == "" ]; then
            exit 1
          fi

          PKG_STACK=$(openstack stack list -f value -c "Stack Name" --sort creation_time:desc | grep Vfmodule_Demo_vPKG | head -1)
          PUBLIC_NET_ID=$(openstack stack show $STACK_NAME -f json | jq -r '.parameters.public_net_id')
          PUBLIC_NET_NAME=$(openstack network show $PUBLIC_NET_ID -f value -c name)
          PKG_IP=$(openstack stack resource show $PKG_STACK vpg_0 -f json | jq -r ".attributes.addresses.$PUBLIC_NET_NAME[0].addr")

          echo "/root/oom/kubernetes/robot/demo-k8s.sh onap vfwclosedloop $PKG_IP" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su
          retval=$?

          LOG_DIR=$(echo "kubectl exec -n onap $ROBOT_POD -- ls -1t /share/logs | grep vfwclosedloop | head -1" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su)
          if [ "$LOG_DIR" == "" ]; then
            exit 1
          fi

          echo "kubectl cp -n onap $ROBOT_POD:share/logs/$LOG_DIR /tmp/robot/logs/$LOG_DIR" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su
          rsync -e "ssh -i $SSH_KEY" -avtz ubuntu@$RANCHER_IP:/tmp/robot/logs/$LOG_DIR/ $WORKSPACE/archives/

          echo "kubectl top nodes" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su
          echo "kubectl get pods -n onap | grep -vE 'Completed|Error|1/1|2/2'" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su

          echo "Browse Robot results at http://$K8S_IP:30209/logs/$LOG_DIR/"

          exit 0
    publishers:
      - integration-robot
      - archive-logs

- job-template:
    disabled_var:
    name: '{env}-oom-vfwcl-pkg-reboot'
    disabled: '{obj:disabled_var}'
    project-type: freestyle
    lab-name: ''
    tenant-name: ''
    scm:
      - git-integration:
          branch: "{branch}"
    wrappers:
      - timestamps
    triggers:
      - timed: '17 4,16 * * *'
    properties:
      - build-blocker:
          blocking-jobs:
            - "{env}-oom-deploy"
            - "{env}-oom-healthcheck"
            - "{env}-oom-instantiate"
            - "{env}-oom-manual"
            - "{env}-oom-staging-manual"
    builders:
      - shell: |
          #!/bin/bash
          set +x
          . $WORKSPACE/deployment/heat/onap-oom/env/{lab-name}/{tenant-name}-openrc
          . $JENKINS_HOME/onap-lab-ci/labs/{lab-name}-openrc
          source $WORKSPACE/test/ete/scripts/install_openstack_cli.sh

          set -x
          rm -rf $WORKSPACE/archives
          mkdir -p $WORKSPACE/archives

          PKG_SERVER=$(openstack server list -f value -c "Name" --sort creation_time:desc | grep demofwl01pgn | head -1)
          openstack server reboot --hard $PKG_SERVER
    publishers:
      - archive-logs

- job-template:
    name: '{env}-oom-deploy'
    project-type: freestyle
    lab-name: ''
    tenant-name: ''
    scm:
      - git-integration:
          branch: "{branch}"
    wrappers:
      - timestamps
    builders:
      - shell: |
          #!/bin/bash
          set +x
          . $WORKSPACE/deployment/heat/onap-oom/env/{lab-name}/{tenant-name}-openrc
          . $JENKINS_HOME/onap-lab-ci/labs/{lab-name}-openrc
          source $WORKSPACE/test/ete/scripts/install_openstack_cli.sh

          set -x
          rm -rf $WORKSPACE/archives
          mkdir -p $WORKSPACE/archives

          cd $WORKSPACE/deployment/heat/onap-oom
          $WORKSPACE/deployment/heat/onap-oom/scripts/deploy.sh -q ./env/{lab-name}/onap-oom.env
    publishers:
      - integration-robot
      - archive-logs

- builder:
    name: run-oom-ete-tag
    builders:
      - shell: |
          #!/bin/bash
          set +x
          . $WORKSPACE/deployment/heat/onap-oom/env/{lab-name}/{tenant-name}-openrc
          . $JENKINS_HOME/onap-lab-ci/labs/{lab-name}-openrc
          source $WORKSPACE/test/ete/scripts/install_openstack_cli.sh

          set -x
          rm -rf $WORKSPACE/archives
          mkdir -p $WORKSPACE/archives

          SSH_KEY=~/.ssh/onap_key
          STACK_NAME="{stack-name}"
          RANCHER_IP=$(openstack stack output show $STACK_NAME rancher_vm_ip -c output_value -f value)
          K8S_IP=$(openstack stack output show $STACK_NAME k8s_01_vm_ip -c output_value -f value)
          ssh-keygen -R $RANCHER_IP

          ROBOT_POD=$(echo "kubectl -n onap get pods | grep robot | sed 's/ .*//'" | ssh -i $SSH_KEY -o StrictHostKeychecking=no ubuntu@$RANCHER_IP sudo su)
          if [ "$ROBOT_POD" == "" ]; then
            exit 1
          fi

          echo "/root/oom/kubernetes/robot/ete-k8s.sh onap {robot-tag}" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su
          retval=$?

          LOG_DIR=$(echo "kubectl exec -n onap $ROBOT_POD -- ls -1t /share/logs | grep {robot-tag} | head -1" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su)
          if [ "$LOG_DIR" == "" ]; then
            exit 1
          fi

          echo "kubectl cp -n onap $ROBOT_POD:share/logs/$LOG_DIR /tmp/robot/logs/$LOG_DIR" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su
          rsync -e "ssh -i $SSH_KEY" -avtz ubuntu@$RANCHER_IP:/tmp/robot/logs/$LOG_DIR/ $WORKSPACE/archives/

          echo "Browse Robot results at http://$K8S_IP:30209/logs/$LOG_DIR/"

          exit 0

- builder:
    name: run-oom-ete
    builders:
      - shell: |
          #!/bin/bash
          set +x
          . $WORKSPACE/deployment/heat/onap-oom/env/{lab-name}/{tenant-name}-openrc
          . $JENKINS_HOME/onap-lab-ci/labs/{lab-name}-openrc
          source $WORKSPACE/test/ete/scripts/install_openstack_cli.sh

          set -x
          rm -rf $WORKSPACE/archives
          mkdir -p $WORKSPACE/archives

          SSH_KEY=~/.ssh/onap_key
          ENV_FILE=./env/{lab-name}/onap-oom.env
          #SO_ENCRYPTION_KEY=aa3871669d893c7fb8abbcda31b88b4f
          #export OS_PASSWORD_ENCRYPTED=$(echo -n "$OS_PASSWORD" | openssl aes-128-ecb -e -K "$SO_ENCRYPTION_KEY" -nosalt | xxd -c 256 -p)

          #Use new encryption method
          pushd $WORKSPACE/deployment/heat/onap-oom/scripts
          javac Crypto.java
          SO_ENCRYPTION_KEY=aa3871669d893c7fb8abbcda31b88b4f
          export OS_PASSWORD_ENCRYPTED=$(java Crypto "$OS_PASSWORD" "$SO_ENCRYPTION_KEY")
          popd


          STACK_NAME="{stack-name}"


          $WORKSPACE/test/ete/scripts/teardown-onap.sh -q

          # temporary workaround to handle undeletable stacks
          if [ ! -z "$(openstack stack show -c stack_status -f value $STACK_NAME)" ]; then
            STACK_NAME="{stack-name}-$RANDOM"
          fi

          cd $WORKSPACE/deployment/heat/onap-oom
          envsubst < $ENV_FILE > $ENV_FILE~
          if ! openstack stack create -t ./onap-oom.yaml -e $ENV_FILE~ $STACK_NAME --parameter docker_manifest={docker_manifest} --parameter portal_hostname={stack-name}.{lab-name}.onapci.org --parameter integration_gerrit_branch={gerrit_branch} --parameter integration_gerrit_refspec={gerrit_refspec}; then
            exit 1
          fi
          while [ "CREATE_IN_PROGRESS" == "$(openstack stack show -c stack_status -f value $STACK_NAME)" ]; do
            sleep 30
          done

          STATUS=$(openstack stack show -c stack_status -f value $STACK_NAME)
          echo $STATUS
          if [ "CREATE_COMPLETE" != "$STATUS" ]; then
            openstack stack show -c stack_status_reason -f value $STACK_NAME
            exit 1
          fi

          for i in $(seq 1 30); do
            sleep 30
            RANCHER_IP=$(openstack stack output show $STACK_NAME rancher_vm_ip -c output_value -f value)
            K8S_IP=$(openstack stack output show $STACK_NAME k8s_01_vm_ip -c output_value -f value)
            timeout 1 ping -c 1 "$RANCHER_IP" && break
          done
          sleep 2m
          ssh-keygen -R $RANCHER_IP

          set +x
          ~/onap-lab-ci/labs/set-dns-record.sh "{stack-name}.{lab-name}" $K8S_IP
          set -x

          ssh -o StrictHostKeychecking=no -i $SSH_KEY ubuntu@$RANCHER_IP "sed -u '/Cloud-init.*finished/q' <(tail -n+0 -f /var/log/cloud-init-output.log)"
          PREV_RESULT=0
          for n in $(seq 1 20); do
            RESULT=$(ssh -i $SSH_KEY ubuntu@$RANCHER_IP 'sudo su -c "kubectl -n onap get pods"' | grep -vE 'NAME|Completed|Error|1/1|2/2' | wc -l)
            if [[ $? -eq 0 && ( $RESULT -eq 0 || $RESULT -eq $PREV_RESULT ) ]]; then
              break
            fi
            sleep 20m
            PREV_RESULT=$RESULT
          done

          PREV_RESULT=0
          for n in $(seq 1 20); do
            echo "Wait for HEALTHCHECK count $n of 10"
            ROBOT_POD=$(ssh -i $SSH_KEY ubuntu@$RANCHER_IP 'sudo su -c "kubectl --namespace onap get pods"' | grep robot | sed 's/ .*//')
            ssh -i $SSH_KEY ubuntu@$RANCHER_IP  'sudo su -l root -c "/root/oom/kubernetes/robot/ete-k8s.sh onap health"'
            RESULT=$?
            if [[ $RESULT -lt 10 && ( $RESULT -eq 0 || $RESULT -eq $PREV_RESULT ) ]]; then
              break
            fi
            sleep 20m
            PREV_RESULT=$RESULT
          done
          if [ "$ROBOT_POD" == "" ]; then
            exit 1
          fi

          LOG_DIR=$(echo "kubectl exec -n onap $ROBOT_POD -- ls -1t /share/logs | grep health | head -1" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su)
          echo "kubectl cp -n onap $ROBOT_POD:share/logs/$LOG_DIR /tmp/robot/logs/$LOG_DIR" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su
          echo "Browse Robot results at http://$K8S_IP:30209/logs/$LOG_DIR/"
          mkdir -p $WORKSPACE/archives/healthcheck
          rsync -e "ssh -i $SSH_KEY" -avtz ubuntu@$RANCHER_IP:/tmp/robot/logs/$LOG_DIR/ $WORKSPACE/archives/healthcheck

          ssh -i $SSH_KEY root@$RANCHER_IP 'kubectl get pods -n onap'
          ssh -i $SSH_KEY root@$RANCHER_IP "kubectl get pods -n onap -o json" > $WORKSPACE/archives/onap-pods.json


          # demo init
          ssh -i $SSH_KEY ubuntu@$RANCHER_IP  'sudo su -l root -c "/root/oom/kubernetes/robot/demo-k8s.sh onap init"'
          LOG_DIR=$(echo "kubectl exec -n onap $ROBOT_POD -- ls -1t /share/logs | grep demo_init | head -1" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su)
          echo "kubectl cp -n onap $ROBOT_POD:share/logs/$LOG_DIR /tmp/robot/logs/$LOG_DIR" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su
          echo "Browse Robot results at http://$K8S_IP:30209/logs/$LOG_DIR/"
          mkdir -p $WORKSPACE/archives/demo-init
          rsync -e "ssh -i $SSH_KEY" -avtz ubuntu@$RANCHER_IP:/tmp/robot/logs/$LOG_DIR/ $WORKSPACE/archives/demo-init

          # ete ete
          ssh -i $SSH_KEY ubuntu@$RANCHER_IP  'sudo su -l root -c "/root/oom/kubernetes/robot/ete-k8s.sh onap ete"'
          LOG_DIR=$(echo "kubectl exec -n onap $ROBOT_POD -- ls -1t /share/logs | grep ete_ete | head -1" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su)
          echo "kubectl cp -n onap $ROBOT_POD:share/logs/$LOG_DIR /tmp/robot/logs/$LOG_DIR" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su
          echo "Browse Robot results at http://$K8S_IP:30209/logs/$LOG_DIR/"
          mkdir -p $WORKSPACE/archives/ete
          rsync -e "ssh -i $SSH_KEY" -avtz ubuntu@$RANCHER_IP:/tmp/robot/logs/$LOG_DIR/ $WORKSPACE/archives/ete

          # ete distribute
          ssh -i $SSH_KEY ubuntu@$RANCHER_IP  'sudo su -l root -c "/root/oom/kubernetes/robot/ete-k8s.sh onap distribute"'
          LOG_DIR=$(echo "kubectl exec -n onap $ROBOT_POD -- ls -1t /share/logs | grep distribute | head -1" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su)
          echo "kubectl cp -n onap $ROBOT_POD:share/logs/$LOG_DIR /tmp/robot/logs/$LOG_DIR" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su
          echo "Browse Robot results at http://$K8S_IP:30209/logs/$LOG_DIR/"
          mkdir -p $WORKSPACE/archives/distribute
          rsync -e "ssh -i $SSH_KEY" -avtz ubuntu@$RANCHER_IP:/tmp/robot/logs/$LOG_DIR/ $WORKSPACE/archives/distribute

          # ete instantiate
          ssh -i $SSH_KEY ubuntu@$RANCHER_IP  'sudo su -l root -c "/root/oom/kubernetes/robot/ete-k8s.sh onap instantiate"'
          LOG_DIR=$(echo "kubectl exec -n onap $ROBOT_POD -- ls -1t /share/logs | grep instantiate | head -1" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su)
          echo "kubectl cp -n onap $ROBOT_POD:share/logs/$LOG_DIR /tmp/robot/logs/$LOG_DIR" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su
          echo "Browse Robot results at http://$K8S_IP:30209/logs/$LOG_DIR/"
          mkdir -p $WORKSPACE/archives/instantiate
          rsync -e "ssh -i $SSH_KEY" -avtz ubuntu@$RANCHER_IP:/tmp/robot/logs/$LOG_DIR/ $WORKSPACE/archives/instantiate

          # ete portal
          ssh -i $SSH_KEY ubuntu@$RANCHER_IP  'sudo su -l root -c "/root/oom/kubernetes/robot/ete-k8s.sh onap portal"'
          LOG_DIR=$(echo "kubectl exec -n onap $ROBOT_POD -- ls -1t /share/logs | grep portal | head -1" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su)
          echo "kubectl cp -n onap $ROBOT_POD:share/logs/$LOG_DIR /tmp/robot/logs/$LOG_DIR" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su
          echo "Browse Robot results at http://$K8S_IP:30209/logs/$LOG_DIR/"
          mkdir -p $WORKSPACE/archives/portal
          rsync -e "ssh -i $SSH_KEY" -avtz ubuntu@$RANCHER_IP:/tmp/robot/logs/$LOG_DIR/ $WORKSPACE/archives/portal

          # push sample vFWCL policies
          PAP_POD=$(ssh -i $SSH_KEY ubuntu@$RANCHER_IP 'sudo su -c "kubectl --namespace onap get pods"' | grep policy-pap | sed 's/ .*//')
          echo "kubectl exec -it $PAP_POD -n onap -c pap -- bash -c 'export PRELOAD_POLICIES=true; /tmp/policy-install/config/push-policies.sh'" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su

          # ete instantiateDemoVFWCL
          ssh -i $SSH_KEY ubuntu@$RANCHER_IP  'sudo su -l root -c "/root/oom/kubernetes/robot/ete-k8s.sh onap instantiateDemoVFWCL"'
          LOG_DIR=$(echo "kubectl exec -n onap $ROBOT_POD -- ls -1t /share/logs | grep instantiateDemoVFWCL | head -1" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su)
          echo "kubectl cp -n onap $ROBOT_POD:share/logs/$LOG_DIR /tmp/robot/logs/$LOG_DIR" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su
          echo "Browse Robot results at http://$K8S_IP:30209/logs/$LOG_DIR/"
          mkdir -p $WORKSPACE/archives/instantiateDemoVFWCL
          rsync -e "ssh -i $SSH_KEY" -avtz ubuntu@$RANCHER_IP:/tmp/robot/logs/$LOG_DIR/ $WORKSPACE/archives/instantiateDemoVFWCL

          # restart drools
          echo "kubectl delete pod dev-policy-drools-0 -n onap" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su

          # wait for policy to kick in
          sleep 20m

          # demo vfwclosedloop
          PKG_STACK=$(openstack stack list -f value -c "Stack Name" --sort creation_time:desc | grep Vfmodule_Demo_vPKG | head -1)
          PUBLIC_NET_ID=$(openstack stack show $STACK_NAME -f json | jq -r '.parameters.public_net_id')
          PUBLIC_NET_NAME=$(openstack network show $PUBLIC_NET_ID -f value -c name)
          PKG_IP=$(openstack stack resource show $PKG_STACK vpg_0 -f json | jq -r ".attributes.addresses.$PUBLIC_NET_NAME[0].addr")
          echo "/root/oom/kubernetes/robot/demo-k8s.sh onap vfwclosedloop $PKG_IP" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su
          LOG_DIR=$(echo "kubectl exec -n onap $ROBOT_POD -- ls -1t /share/logs | grep vfwclosedloop | head -1" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su)
          echo "kubectl cp -n onap $ROBOT_POD:share/logs/$LOG_DIR /tmp/robot/logs/$LOG_DIR" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su
          echo "Browse Robot results at http://$K8S_IP:30209/logs/$LOG_DIR/"
          mkdir -p $WORKSPACE/archives/vfwclosedloop
          rsync -e "ssh -i $SSH_KEY" -avtz ubuntu@$RANCHER_IP:/tmp/robot/logs/$LOG_DIR/ $WORKSPACE/archives/vfwclosedloop


          cd $WORKSPACE/archives
          rebot -N "ONAP CI" --removekeywords wuks --output output.xml --merge $(ls -rt */output.xml)

          # temporary workaround to delete tlab-oom-daily after deployment
          if [[ "{lab-name}" == "tlab" && "{tenant-name}" == "ETE-HEAT-Test" ]]; then
            $WORKSPACE/test/ete/scripts/teardown-onap.sh -q
          fi

          exit 0

- job-template:
    name: '{env}-oom-verify'
    project-type: freestyle
    lab-name: ''
    tenant-name: ''
    scm:
      - gerrit-trigger-scm
    triggers:
      - gerrit-trigger-patch-submitted:
          project: 'integration'
          branch: '{branch}'
          files: 'version-manifest/src/main/resources/docker-manifest.csv'
    wrappers:
      - timestamps
      - timeout:
          timeout: 720
          fail: true
    builders:
      - run-oom-ete:
          stack-name: '{env}'
          lab-name: '{lab-name}'
          tenant-name: '{tenant-name}'
          docker_manifest: 'docker-manifest.csv'
          gerrit_branch: '$GERRIT_BRANCH'
          gerrit_refspec: '$GERRIT_REFSPEC'
    publishers:
      - integration-robot
      - archive-logs

- job-template:
    disabled_var:
    triggers_var:
    name: '{env}-oom-{frequency}'
    description: 'OOM Release deployment to {lab-name} {tenant-name}'
    disabled: '{obj:disabled_var}'
    project-type: freestyle
    lab-name: ''
    tenant-name: ''
    scm:
      - git-integration:
          branch: "{branch}"
    wrappers:
      - timestamps
      - timeout:
          timeout: 720
          fail: true
    triggers: '{obj:triggers_var}'
    builders:
      - run-oom-ete:
          stack-name: '{stack-name}'
          lab-name: '{lab-name}'
          tenant-name: '{tenant-name}'
          docker_manifest: 'docker-manifest.csv'
          gerrit_branch: '{branch}'
          gerrit_refspec: 'refs/heads/{branch}'
    publishers:
      - integration-robot
      - pods-influxdb
      - archive-logs
      - trigger-lf-lab-job:
          lab-name: '{lab-name}'

- job-template:
    disabled_var:
    triggers_var:
    name: '{env}-oom-staging-{frequency}'
    description: 'OOM Staging deployment to {lab-name} {tenant-name}'
    disabled: '{obj:disabled_var}'
    project-type: freestyle
    lab-name: ''
    tenant-name: ''
    scm:
      - git-integration:
          branch: "{branch}"
    wrappers:
      - timestamps
      - timeout:
          timeout: 720
          fail: true
    triggers: '{obj:triggers_var}'
    builders:
      - run-oom-ete:
          stack-name: '{stack-name}'
          lab-name: '{lab-name}'
          tenant-name: '{tenant-name}'
          docker_manifest: 'docker-manifest-staging.csv'
          gerrit_branch: '{branch}'
          gerrit_refspec: 'refs/heads/{branch}'
    publishers:
      - integration-robot
      - pods-influxdb
      - archive-logs
      - trigger-lf-lab-job:
          lab-name: '{lab-name}'

- job-template:
    name: 'oom-verify'
    project-type: freestyle
    parameters:
      - string:
          name: GERRIT_PROJECT
          default: 'oom'
          description: 'GERRIT_PROJECT parameter if not given by trigger'
      - string:
          name: GERRIT_BRANCH
          default: '{branch}'
          description: 'JJB configured GERRIT_BRANCH parameter'
      - string:
          name: GERRIT_REFSPEC
          default: 'refs/heads/{branch}'
          description: 'GERRIT_REFSPEC parameter if not given by trigger'
    scm:
      - gerrit-trigger-scm
    triggers:
      - gerrit:
          server-name: 'gerrit.onap.org'
          trigger-on:
            - patchset-created-event:
                exclude-drafts: 'false'
                exclude-trivial-rebase: 'false'
                exclude-no-code-change: 'false'
            - draft-published-event
            - comment-added-contains-event:
                comment-contains-value: 'recheck'
          projects:
            - project-compare-type: 'ANT'
              project-pattern: 'oom'
              branches:
                - branch-compare-type: 'ANT'
                  branch-pattern: '**/{branch}'
              file-paths:
                - compare-type: 'ANT'
                  pattern: 'kubernetes/**/*.yaml'
            - project-compare-type: 'ANT'
              project-pattern: '*/oom'
              branches:
                - branch-compare-type: 'ANT'
                  branch-pattern: '**/{branch}'
              file-paths:
                - compare-type: 'ANT'
                  pattern: '**/*.yaml'
    wrappers:
      - timestamps
      - timeout:
          timeout: 720
          fail: true
    builders:
      - shell: |
          #!/bin/bash

          set +e
          set -x
          rm -rf $WORKSPACE/archives
          mkdir -p $WORKSPACE/archives

          NEXUS_RELEASE_PREFIX="https://nexus3.onap.org/repository/docker.release/v2"
          RELEASE_TAGS_PATH="/tmp/onap-docker-release"
          err=0

          # if no files changed, will scan all files
          CHANGED_FILES=""
          if [ $(git rev-parse HEAD) != $(git rev-parse origin/master) ]; then
            CHANGED_FILES=$(git diff-tree --no-commit-id --name-only -r HEAD)
          fi
          IMAGES_FILE=`mktemp --suffix=_images.txt`
          rgrep -h -E ':\s*onap/.*:.*' $CHANGED_FILES | awk '{{$1=$1}};1' | cut -d' ' -f2 | sort | uniq | tee $IMAGES_FILE

          set +x
          for line in $(cat $IMAGES_FILE); do
            image=$(echo $line | cut -d : -f 1)
            tag=$(echo $line | cut -d : -f 2)

            case $tag in
            *STAGING*)
              echo "[ERROR] $image:$tag not released"
              (( err++ ))
              ;;
            *SNAPSHOT*)
              echo "[ERROR] $image:$tag not released"
              (( err++ ))
              ;;
            *latest*)
              echo "[ERROR] $image:$tag not released"
              (( err++ ))
              ;;
            *)
              TAGS_FILE=$RELEASE_TAGS_PATH/$image/tags.txt
              mkdir -p $RELEASE_TAGS_PATH/$image
              touch $TAGS_FILE
              grep -q "^$tag\$" $TAGS_FILE
              if [ $? -ne 0 ]; then
                # not found; download latest
                curl -s $NEXUS_RELEASE_PREFIX/$image/tags/list | jq -r '.tags[]' > $TAGS_FILE 2> /dev/null
                grep -q "^$tag\$" $TAGS_FILE
                if [ $? -ne 0 ]; then
                  echo "[ERROR] $image:$tag not released"
                  (( err++ ))
                fi
              fi
              ;;
            esac

          done
          rm $IMAGES_FILE
          echo $err unreleased images found.
          exit $err

    publishers:
      - archive-logs
