---
- job-template:
    name: '{env}-oom-healthcheck'
    project-type: freestyle
    lab-name: ''
    tenant-name: ''
    scm:
      - git-integration:
          branch: "{branch}"
    wrappers:
      - timestamps
    builders:
      - run-oom-ete-tag:
          lab-name: '{lab-name}'
          tenant-name: '{tenant-name}'
          robot-tag: 'health'
    publishers:
      - integration-robot
      - archive-logs

- job-template:
    name: '{env}-oom-healthdist-resilience'
    project-type: freestyle
    lab-name: ''
    tenant-name: ''
    scm:
      - git-integration:
          branch: "{branch}"
    wrappers:
      - timestamps
    triggers:
      - timed: 'H/20 * * * *'
    properties:
      - build-blocker:
          blocking-jobs:
            - "{env}-oom-deploy"
            - "{env}-oom-healthcheck"
    builders:
      - shell: |
          #!/bin/bash
          set +x
          . $WORKSPACE/deployment/heat/onap-oom/env/{lab-name}/{tenant-name}-openrc
          . $JENKINS_HOME/onap-lab-ci/labs/{lab-name}-openrc
          source $WORKSPACE/test/ete/scripts/install_openstack_cli.sh

          set -x
          rm -rf $WORKSPACE/archives
          mkdir -p $WORKSPACE/archives

          SSH_KEY=~/.ssh/onap_key
          RANCHER_IP=$(openstack stack output show onap-oom rancher_vm_ip -c output_value -f value)
          K8S_IP=$(openstack stack output show onap-oom k8s_1_vm_ip -c output_value -f value)
          ssh-keygen -R $RANCHER_IP

          ROBOT_POD=$(echo "kubectl -n onap get pods | grep robot | sed 's/ .*//'" | ssh -i $SSH_KEY -o StrictHostKeychecking=no ubuntu@$RANCHER_IP sudo su)
          if [ "$ROBOT_POD" == "" ]; then
            exit 1
          fi

          touch $WORKSPACE/kill-history.txt
          GREP_TO_KILL=$( {{ cat $JENKINS_HOME/onap-lab-ci/jobs/$JOB_NAME/kill-list.txt; awk '{{print $1}}' < $WORKSPACE/kill-history.txt; }} | sort | uniq -c | sort -n | head -1 | awk '{{print $2}}')
          POD_TO_KILL=$(echo "kubectl -n onap get pods | grep dev-$GREP_TO_KILL- | sed 's/ .*//' | head -1" | ssh -i $SSH_KEY -o StrictHostKeychecking=no ubuntu@$RANCHER_IP sudo su)
          echo "$GREP_TO_KILL $POD_TO_KILL $BUILD_NUMBER $(date -Is)" >> $WORKSPACE/kill-history.txt
          echo "kubectl -n onap delete pod $POD_TO_KILL" | ssh -i $SSH_KEY -o StrictHostKeychecking=no ubuntu@$RANCHER_IP sudo su
          sleep 15m

          ssh -i $SSH_KEY ubuntu@$RANCHER_IP  'sudo su -l root -c "/root/oom/kubernetes/robot/ete-k8s.sh onap healthdist"'
          retval=$?

          LOG_DIR=$(echo "kubectl exec -n onap $ROBOT_POD -- ls -1t /share/logs | grep healthdist | head -1" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su)
          if [ "$LOG_DIR" == "" ]; then
            exit 1
          fi

          echo "kubectl cp -n onap $ROBOT_POD:share/logs/$LOG_DIR /tmp/robot/logs/$LOG_DIR" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su
          rsync -e "ssh -i $SSH_KEY" -avtz ubuntu@$RANCHER_IP:/tmp/robot/logs/$LOG_DIR/ $WORKSPACE/archives/

          echo "Browse Robot results at http://$K8S_IP:30209/logs/$LOG_DIR/"

          exit 0
    publishers:
      - integration-robot
      - archive-logs

- job-template:
    name: '{env}-oom-instantiate'
    project-type: freestyle
    lab-name: ''
    tenant-name: ''
    scm:
      - git-integration:
          branch: "{branch}"
    wrappers:
      - timestamps
    triggers:
      - reverse:
          jobs:
            - "{env}-oom-deploy"
          result: 'unstable'
    properties:
      - build-blocker:
          blocking-jobs:
            - "{env}-oom-deploy"
            - "{env}-oom-healthcheck"
    builders:
      - shell: |
          #!/bin/bash
          set +x
          . $WORKSPACE/deployment/heat/onap-oom/env/{lab-name}/{tenant-name}-openrc
          . $JENKINS_HOME/onap-lab-ci/labs/{lab-name}-openrc
          source $WORKSPACE/test/ete/scripts/install_openstack_cli.sh

          set -x
          rm -rf $WORKSPACE/archives
          mkdir -p $WORKSPACE/archives

          SSH_KEY=~/.ssh/onap_key
          RANCHER_IP=$(openstack stack output show onap-oom rancher_vm_ip -c output_value -f value)
          K8S_IP=$(openstack stack output show onap-oom k8s_1_vm_ip -c output_value -f value)
          ssh-keygen -R $RANCHER_IP

          ROBOT_POD=$(echo "kubectl -n onap get pods | grep robot | sed 's/ .*//'" | ssh -i $SSH_KEY -o StrictHostKeychecking=no ubuntu@$RANCHER_IP sudo su)
          if [ "$ROBOT_POD" == "" ]; then
            exit 1
          fi

          ssh -i $SSH_KEY ubuntu@$RANCHER_IP  'sudo su -l root -c "/root/oom/kubernetes/robot/demo-k8s.sh onap init"'

          ssh -i $SSH_KEY ubuntu@$RANCHER_IP  'sudo su -l root -c "/root/oom/kubernetes/robot/ete-k8s.sh onap healthdist"'

          ssh -i $SSH_KEY ubuntu@$RANCHER_IP  'sudo su -l root -c "/root/oom/kubernetes/robot/ete-k8s.sh onap distribute"'

          ssh -i $SSH_KEY ubuntu@$RANCHER_IP  'sudo su -l root -c "/root/oom/kubernetes/robot/ete-k8s.sh onap instantiate"'
          retval=$?

          LOG_DIR=$(echo "kubectl exec -n onap $ROBOT_POD -- ls -1t /share/logs | grep instantiate | head -1" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su)
          if [ "$LOG_DIR" == "" ]; then
            exit 1
          fi

          echo "kubectl cp -n onap $ROBOT_POD:share/logs/$LOG_DIR /tmp/robot/logs/$LOG_DIR" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su
          rsync -e "ssh -i $SSH_KEY" -avtz ubuntu@$RANCHER_IP:/tmp/robot/logs/$LOG_DIR/ $WORKSPACE/archives/

          echo "Browse Robot results at http://$K8S_IP:30209/logs/$LOG_DIR/"

          exit 0
    publishers:
      - integration-robot
      - archive-logs

- job-template:
    name: '{env}-oom-stability72hr'
    project-type: freestyle
    lab-name: ''
    tenant-name: ''
    scm:
      - git-integration:
          branch: "{branch}"
    wrappers:
      - timestamps
    triggers:
      - timed: '0 * * * *'
    properties:
      - build-blocker:
          blocking-jobs:
            - "{env}-oom-deploy"
            - "{env}-oom-healthcheck"
            - "{env}-oom-instantiate"
    builders:
      - shell: |
          #!/bin/bash
          set +x
          . $WORKSPACE/deployment/heat/onap-oom/env/{lab-name}/{tenant-name}-openrc
          . $JENKINS_HOME/onap-lab-ci/labs/{lab-name}-openrc
          source $WORKSPACE/test/ete/scripts/install_openstack_cli.sh

          set -x
          rm -rf $WORKSPACE/archives
          mkdir -p $WORKSPACE/archives

          SSH_KEY=~/.ssh/onap_key
          RANCHER_IP=$(openstack stack output show onap-oom rancher_vm_ip -c output_value -f value)
          K8S_IP=$(openstack stack output show onap-oom k8s_1_vm_ip -c output_value -f value)
          ssh-keygen -R $RANCHER_IP

          ROBOT_POD=$(echo "kubectl -n onap get pods | grep robot | sed 's/ .*//'" | ssh -i $SSH_KEY -o StrictHostKeychecking=no ubuntu@$RANCHER_IP sudo su)
          if [ "$ROBOT_POD" == "" ]; then
            exit 1
          fi

          ssh -i $SSH_KEY ubuntu@$RANCHER_IP  'sudo su -l root -c "/root/oom/kubernetes/robot/ete-k8s.sh onap stability72hr"'
          retval=$?

          LOG_DIR=$(echo "kubectl exec -n onap $ROBOT_POD -- ls -1t /share/logs | grep stability72hr | head -1" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su)
          if [ "$LOG_DIR" == "" ]; then
            exit 1
          fi

          echo "kubectl cp -n onap $ROBOT_POD:share/logs/$LOG_DIR /tmp/robot/logs/$LOG_DIR" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su
          rsync -e "ssh -i $SSH_KEY" -avtz ubuntu@$RANCHER_IP:/tmp/robot/logs/$LOG_DIR/ $WORKSPACE/archives/

          echo "Browse Robot results at http://$K8S_IP:30209/logs/$LOG_DIR/"

          exit 0
    publishers:
      - integration-robot
      - archive-logs

- job-template:
    name: '{env}-oom-deploy'
    project-type: freestyle
    lab-name: ''
    tenant-name: ''
    scm:
      - git-integration:
          branch: "{branch}"
    wrappers:
      - timestamps
    builders:
      - shell: |
          #!/bin/bash
          set +x
          . $WORKSPACE/deployment/heat/onap-oom/env/{lab-name}/{tenant-name}-openrc
          . $JENKINS_HOME/onap-lab-ci/labs/{lab-name}-openrc
          source $WORKSPACE/test/ete/scripts/install_openstack_cli.sh

          set -x
          rm -rf $WORKSPACE/archives
          mkdir -p $WORKSPACE/archives

          cd $WORKSPACE/deployment/heat/onap-oom
          $WORKSPACE/deployment/heat/onap-oom/scripts/deploy.sh -q ./env/{lab-name}/onap-oom.env
    publishers:
      - integration-robot
      - archive-logs

- builder:
    name: run-oom-ete-tag
    builders:
      - shell: |
          #!/bin/bash
          set +x
          . $WORKSPACE/deployment/heat/onap-oom/env/{lab-name}/{tenant-name}-openrc
          . $JENKINS_HOME/onap-lab-ci/labs/{lab-name}-openrc
          source $WORKSPACE/test/ete/scripts/install_openstack_cli.sh

          set -x
          rm -rf $WORKSPACE/archives
          mkdir -p $WORKSPACE/archives

          SSH_KEY=~/.ssh/onap_key
          RANCHER_IP=$(openstack stack output show onap-oom rancher_vm_ip -c output_value -f value)
          K8S_IP=$(openstack stack output show onap-oom k8s_1_vm_ip -c output_value -f value)
          ssh-keygen -R $RANCHER_IP

          ROBOT_POD=$(echo "kubectl -n onap get pods | grep robot | sed 's/ .*//'" | ssh -i $SSH_KEY -o StrictHostKeychecking=no ubuntu@$RANCHER_IP sudo su)
          if [ "$ROBOT_POD" == "" ]; then
            exit 1
          fi

          echo "/root/oom/kubernetes/robot/ete-k8s.sh onap {robot-tag}" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su
          retval=$?

          LOG_DIR=$(echo "kubectl exec -n onap $ROBOT_POD -- ls -1t /share/logs | grep {robot-tag} | head -1" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su)
          if [ "$LOG_DIR" == "" ]; then
            exit 1
          fi

          echo "kubectl cp -n onap $ROBOT_POD:share/logs/$LOG_DIR /tmp/robot/logs/$LOG_DIR" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su
          rsync -e "ssh -i $SSH_KEY" -avtz ubuntu@$RANCHER_IP:/tmp/robot/logs/$LOG_DIR/ $WORKSPACE/archives/

          echo "Browse Robot results at http://$K8S_IP:30209/logs/$LOG_DIR/"

          exit 0

- builder:
    name: run-oom-ete
    builders:
      - shell: |
          #!/bin/bash
          set +x
          . $WORKSPACE/deployment/heat/onap-oom/env/{lab-name}/{tenant-name}-openrc
          . $JENKINS_HOME/onap-lab-ci/labs/{lab-name}-openrc
          source $WORKSPACE/test/ete/scripts/install_openstack_cli.sh

          set -x
          rm -rf $WORKSPACE/archives
          mkdir -p $WORKSPACE/archives

          SSH_KEY=~/.ssh/onap_key
          ENV_FILE=./env/{lab-name}/onap-oom.env
          SO_ENCRYPTION_KEY=aa3871669d893c7fb8abbcda31b88b4f
          export OS_PASSWORD_ENCRYPTED=$(echo -n "$OS_PASSWORD" | openssl aes-128-ecb -e -K "$SO_ENCRYPTION_KEY" -nosalt | xxd -c 256 -p)

          $WORKSPACE/test/ete/scripts/teardown-onap.sh -q
          cd $WORKSPACE/deployment/heat/onap-oom
          envsubst < $ENV_FILE > $ENV_FILE~
          if ! openstack stack create -t ./onap-oom.yaml -e $ENV_FILE~ {stack-name} --parameter docker_manifest={docker_manifest} --parameter integration_gerrit_branch={gerrit_branch} --parameter integration_gerrit_refspec={gerrit_refspec}; then
            exit 1
          fi
          while [ "CREATE_IN_PROGRESS" == "$(openstack stack show -c stack_status -f value {stack-name})" ]; do
            sleep 30
          done

          STATUS=$(openstack stack show -c stack_status -f value {stack-name})
          echo $STATUS
          if [ "CREATE_COMPLETE" != "$STATUS" ]; then
            openstack stack show -c stack_status_reason -f value {stack-name}
            exit 1
          fi

          for i in $(seq 1 30); do
            sleep 30
            RANCHER_IP=$(openstack stack output show {stack-name} rancher_vm_ip -c output_value -f value)
            K8S_IP=$(openstack stack output show {stack-name} k8s_1_vm_ip -c output_value -f value)
            timeout 1 ping -c 1 "$RANCHER_IP" && break
          done
          sleep 2m
          ssh-keygen -R $RANCHER_IP

          ssh -o StrictHostKeychecking=no -i $SSH_KEY ubuntu@$RANCHER_IP "sed -u '/Cloud-init.*finished/q' <(tail -n+0 -f /var/log/cloud-init-output.log)"
          PREV_RESULT=0
          for n in $(seq 1 20); do
            RESULT=$(ssh -i $SSH_KEY ubuntu@$RANCHER_IP 'sudo su -c "kubectl -n onap get pods"' | grep -v 1/1 | grep -v 2/2 | grep -v Complete | wc -l)
            if [[ $? -eq 0 && ( $RESULT -eq 0 || $RESULT -eq $PREV_RESULT ) ]]; then
              break
            else
              sleep 15m
            fi
            PREV_RESULT=$RESULT
          done

          PREV_RESULT=0
          for n in $(seq 1 20); do
            echo "Wait for HEALTHCHECK count $n of 10"
            ROBOT_POD=$(ssh -i $SSH_KEY ubuntu@$RANCHER_IP 'sudo su -c "kubectl --namespace onap get pods"' | grep robot | sed 's/ .*//')
            ssh -i $SSH_KEY ubuntu@$RANCHER_IP  'sudo su -l root -c "/root/oom/kubernetes/robot/ete-k8s.sh onap health"'
            RESULT=$?
            if [[ $RESULT -lt 10 && ( $RESULT -eq 0 || $RESULT -eq $PREV_RESULT ) ]]; then
              break
            else
              sleep 15m
            fi
            PREV_RESULT=$RESULT
          done
          if [ "$ROBOT_POD" == "" ]; then
            exit 1
          fi

          LOG_DIR=$(echo "kubectl exec -n onap $ROBOT_POD -- ls -1t /share/logs | grep health | head -1" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su)
          echo "kubectl cp -n onap $ROBOT_POD:share/logs/$LOG_DIR /tmp/robot/logs/$LOG_DIR" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su
          echo "Browse Robot results at http://$K8S_IP:30209/logs/$LOG_DIR/"
          mkdir -p $WORKSPACE/archives/healthcheck
          rsync -e "ssh -i $SSH_KEY" -avtz ubuntu@$RANCHER_IP:/tmp/robot/logs/$LOG_DIR/ $WORKSPACE/archives/healthcheck

          ssh -i $SSH_KEY root@$RANCHER_IP 'kubectl get pods -n onap'
          ssh -i $SSH_KEY root@$RANCHER_IP "kubectl get pods -n onap -o json" > $WORKSPACE/archives/onap-pods.json

          sleep 15m

          ssh -i $SSH_KEY ubuntu@$RANCHER_IP  'sudo su -l root -c "/root/oom/kubernetes/robot/demo-k8s.sh onap init"'
          LOG_DIR="demo/InitDemo"
          echo "kubectl cp -n onap $ROBOT_POD:share/logs/$LOG_DIR /tmp/robot/logs/$LOG_DIR" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su
          echo "Browse Robot results at http://$K8S_IP:30209/logs/$LOG_DIR/"
          mkdir -p $WORKSPACE/archives/demo-init
          rsync -e "ssh -i $SSH_KEY" -avtz ubuntu@$RANCHER_IP:/tmp/robot/logs/$LOG_DIR/ $WORKSPACE/archives/demo-init

          ssh -i $SSH_KEY ubuntu@$RANCHER_IP  'sudo su -l root -c "/root/oom/kubernetes/robot/ete-k8s.sh onap healthdist"'
          LOG_DIR=$(echo "kubectl exec -n onap $ROBOT_POD -- ls -1t /share/logs | grep healthdist | head -1" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su)
          echo "kubectl cp -n onap $ROBOT_POD:share/logs/$LOG_DIR /tmp/robot/logs/$LOG_DIR" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su
          echo "Browse Robot results at http://$K8S_IP:30209/logs/$LOG_DIR/"
          mkdir -p $WORKSPACE/archives/healthdist
          rsync -e "ssh -i $SSH_KEY" -avtz ubuntu@$RANCHER_IP:/tmp/robot/logs/$LOG_DIR/ $WORKSPACE/archives/healthdist

          ssh -i $SSH_KEY ubuntu@$RANCHER_IP  'sudo su -l root -c "/root/oom/kubernetes/robot/ete-k8s.sh onap distribute"'
          LOG_DIR=$(echo "kubectl exec -n onap $ROBOT_POD -- ls -1t /share/logs | grep distribute | head -1" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su)
          echo "kubectl cp -n onap $ROBOT_POD:share/logs/$LOG_DIR /tmp/robot/logs/$LOG_DIR" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su
          echo "Browse Robot results at http://$K8S_IP:30209/logs/$LOG_DIR/"
          mkdir -p $WORKSPACE/archives/distribute
          rsync -e "ssh -i $SSH_KEY" -avtz ubuntu@$RANCHER_IP:/tmp/robot/logs/$LOG_DIR/ $WORKSPACE/archives/distribute

          ssh -i $SSH_KEY ubuntu@$RANCHER_IP  'sudo su -l root -c "/root/oom/kubernetes/robot/ete-k8s.sh onap instantiate"'
          LOG_DIR=$(echo "kubectl exec -n onap $ROBOT_POD -- ls -1t /share/logs | grep instantiate | head -1" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su)
          echo "kubectl cp -n onap $ROBOT_POD:share/logs/$LOG_DIR /tmp/robot/logs/$LOG_DIR" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su
          echo "Browse Robot results at http://$K8S_IP:30209/logs/$LOG_DIR/"
          mkdir -p $WORKSPACE/archives/instantiate
          rsync -e "ssh -i $SSH_KEY" -avtz ubuntu@$RANCHER_IP:/tmp/robot/logs/$LOG_DIR/ $WORKSPACE/archives/instantiate

          ssh -i $SSH_KEY ubuntu@$RANCHER_IP  'sudo su -l root -c "/root/oom/kubernetes/robot/ete-k8s.sh onap portal"'
          LOG_DIR=$(echo "kubectl exec -n onap $ROBOT_POD -- ls -1t /share/logs | grep portal | head -1" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su)
          echo "kubectl cp -n onap $ROBOT_POD:share/logs/$LOG_DIR /tmp/robot/logs/$LOG_DIR" | ssh -i $SSH_KEY ubuntu@$RANCHER_IP sudo su
          echo "Browse Robot results at http://$K8S_IP:30209/logs/$LOG_DIR/"
          mkdir -p $WORKSPACE/archives/portal
          rsync -e "ssh -i $SSH_KEY" -avtz ubuntu@$RANCHER_IP:/tmp/robot/logs/$LOG_DIR/ $WORKSPACE/archives/portal

          cd $WORKSPACE/archives
          rebot -N "ONAP CI" --removekeywords wuks --output output.xml --merge */output.xml

          exit 0

- job-template:
    name: '{env}-oom-verify'
    project-type: freestyle
    lab-name: ''
    tenant-name: ''
    scm:
      - gerrit-trigger-scm
    triggers:
      - gerrit-trigger-patch-submitted:
          project: 'integration'
          branch: '{branch}'
          files: 'version-manifest/src/main/resources/docker-manifest.csv'
    wrappers:
      - timestamps
      - timeout:
          timeout: 720
          fail: true
    builders:
      - run-oom-ete:
          stack-name: '{env}'
          lab-name: '{lab-name}'
          tenant-name: '{tenant-name}'
          docker_manifest: 'docker-manifest.csv'
          gerrit_branch: '$GERRIT_BRANCH'
          gerrit_refspec: '$GERRIT_REFSPEC'
    publishers:
      - integration-robot
      - archive-logs

- job-template:
    disabled_var:
    triggers_var:
    name: '{env}-oom-{frequency}'
    description: 'OOM Release deployment to {lab-name} {tenant-name}'
    disabled: '{obj:disabled_var}'
    project-type: freestyle
    lab-name: ''
    tenant-name: ''
    scm:
      - git-integration:
          branch: "{branch}"
    wrappers:
      - timestamps
      - timeout:
          timeout: 720
          fail: true
    triggers: '{obj:triggers_var}'
    builders:
      - run-oom-ete:
          stack-name: '{stack-name}'
          lab-name: '{lab-name}'
          tenant-name: '{tenant-name}'
          docker_manifest: 'docker-manifest.csv'
          gerrit_branch: '{branch}'
          gerrit_refspec: 'refs/heads/master'
    publishers:
      - integration-robot
      - pods-influxdb
      - archive-logs
      - trigger-lf-lab-job:
          lab-name: '{lab-name}'

- job-template:
    disabled_var:
    triggers_var:
    name: '{env}-oom-staging-{frequency}'
    description: 'OOM Staging deployment to {lab-name} {tenant-name}'
    disabled: '{obj:disabled_var}'
    project-type: freestyle
    lab-name: ''
    tenant-name: ''
    scm:
      - git-integration:
          branch: "{branch}"
    wrappers:
      - timestamps
      - timeout:
          timeout: 720
          fail: true
    triggers: '{obj:triggers_var}'
    builders:
      - run-oom-ete:
          stack-name: '{stack-name}'
          lab-name: '{lab-name}'
          tenant-name: '{tenant-name}'
          docker_manifest: 'docker-manifest-staging.csv'
          gerrit_branch: '{branch}'
          gerrit_refspec: 'refs/heads/master'
    publishers:
      - integration-robot
      - pods-influxdb
      - archive-logs
      - trigger-lf-lab-job:
          lab-name: '{lab-name}'
